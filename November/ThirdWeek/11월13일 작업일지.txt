11월 13일 작업일지
BatonManageShowActivity_User.java
 AsyncTask GetBatonShow 에서 
if (Status == 1) {
	linearfinish.setVisibility(View.GONE);			
}

Status 가 진행중인 상태일 때, 클라이언트가 보는 User 페이지를 만들자.
	>batonmanage_managetasks_clientpage_progress.xml id 를 변경하자. 
	>id 에 맞게 TextView 및 ImageView 를 구성. 
	>GetBatonShow extends AsyncTask 작성
	>Button 에 다이얼로그 Action 달기
	>confirm action AsyncTask 작성
	>status 가 2 즉 클라이언트 confirm 상태일때 바뀐다.
	
Client 어댑터에 클라이언트 프로필 activity 를 연결하자.
	> BatonManageProfileActivity - batonmanage_profile
	> GetUserProfile AsyncTask 작성
	> 기타 리뷰 및 유저 정보 받아오는 action 서버에서 작성을 해야한다.

Review 에 관한 서버 모듈을 만들어야한다.
	Review 는 레이팅 별점과 리뷰 글이 들어간다.
	Rating Bar Tip
	- http://www.androidside.com/bbs/board.php?bo_table=B46&wr_id=40966
	- http://www.mkyong.com/android/android-rating-bar-example/
	서버에 content:text star:integer 추가


처음부터 다시 교체작업을 하자.
	BatonShowActivity 의 contentview 를 batonmanage_tasks 로 교체
	NullPointException 일어나는데 살펴보면 잘못된 id를 레퍼런싱하는 경우가 많다.
UI 쓰레드에서 Null Exception 일어났을때
	1. 해당 변수가 초기화되었는지 확인한다.
	2. 제대로 초기화 되었는지 확인한다.
	3. 서버에서 제대로 값을 불러오는지 확인한다.
BatonShowActivity.java
	batonindex_detail.xml 으로 변경 because, 제안하기 버튼.	 -> Status 에 따라서 분기
	current_user 에 따라서 분기
	// status 가 대기중이거나 현재 유저일때
	if (status != 0 || current_user) {
		suggestBtn.setVisibility(View.GONE);
	}

ProgressDialog 에는
public void DialogProgress() {
		progressdialog = ProgressDialog.show(this, "",
				"잠시만 기다려 주세요 ...", true);
		// 창을 내린다.
		// progressdialog.dismiss();
	}

Activity Refresh?
	Running상태로 전환될 때 발생하는 이벤트중 
	첫 실행을 제외하고 모든경우에 만족하는 메서드는 onResume()입니다.

	ㄴ onCreate()에 내용을 onResume()에다가 다 넣어주니까 잘 돌아가네요 감사합니다

Tip.
Intent 에 Context 를 쓸때는 this 를 가급적 피하고 클래스명.this 로 해주세요
refresh 를 생각하신다면 in.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP); 여튼 이걸 해주셔야 합니다

===================================================================

Activity Refresh 를 해결하자.
Intent Flag 를 살펴보자.
FLAG_ACTIVITY_SINGLE_TOP
- 이 플래그는 말그대로 하나의 탑(?)을 의미하는 설정입니다. 
엑티비티를 호출할 경우 호출된 엑티비티가 현재 태스크의 최상단에 존재하고 있었다면 새
로운 인스턴스를 생성하지 않습니다. 
예를 들어 ABC가 엑티비티 스택에 존재하는 상태에서 C를 호출하였다면 여전히 ABC가 존재하게 됩니다.

Intent in = new Intent(getApplicationContext(),
	BatonShowActivity.class);
Bundle extras = new Bundle();
extras.putString("task_id", task_id);
in.putExtras(extras);
startActivity(in);
finish();

위 방법은 액티비티를 재생성하는 방법인데 onCreate 를 다시 재호출하는 방법을 생각해보자.
Intent 를 새로 생성하는 방법 밖에 없는가..
if (StatusCode == 201) {
	Toast.makeText(getApplicationContext(), "제안 되었습니다.",
			Toast.LENGTH_SHORT).show();
	new GetBatonShow().execute();
}
새로 불러왔다. Good 처리

client true false 에 따라서 처리를 해주자.
user 의 정보를 받아오자. show action 설정
http://stackoverflow.com/questions/7086583/creating-a-users-show-page-using-devise

API 
resources :users do
	collection do
		get ''current_user"''
	end
end

stack level too deep 의 에러가 난다.
This error generally happens when you accidentally recursively changing an attribute. 
method name 과 호출되는 method 내의 method 이름이 같을때 , 즉 recursive 하게 호출을 할때 해당 에러 발생.
So, in Method call Mathod name is changed.
=> http://127.0.0.1:3000/api/users/user_current?auth_token=MzBp9tGyJaxpadk6p5qt
현재 유저의 정보를 가져오는 api 주소.
==========================================================================
setVisibility
prevButton = (Button) findViewById(R.id.button_prev);        
nextButton = (Button) findViewById(R.id.button_next);        
actionButton = (Button) findViewById(R.id.launch_action);

launchActivity.setOnClickListener(new View.OnClickListener() {
 public void onClick(View v) {
   if (buttonStatus == 1) {
     buttonStatus = 0;
     prevButton.setVisibility(View.GONE);
  }
  else {
    buttonStatus = 1;
    prevButton.setVisibility(View.INVISIBLE);
  }
 }
});
==========================================================================
1. 딜 Create 모듈 완성 (기프티콘 포함)
2. 딜 진행중 status 후 완료 및 리뷰쓰는 모듈 완성.

client 에서 안보이는 것들은 먼저 Gone 처리 해주고 나오면 Visible 처리를 해주자.
{
"id": 1,
"name": "name 1",
"fromloc": "fromloc 1",
"toloc": "toloc 1",
"description": "description 1",
"status": 1,
"calldate": null,
"enddate": null,
"current_user": true,
"client_status": false,
"user": {
"id": 1,
"name": "수지"
},-
"reviews": [(0)],
"client": nul==

// 대기중일때, auth_client true 일때, current_user 가 아닐때, 이 태스크에서 비딩을 걸수있따.
if (status == 0 && auth_client && !current_user) {
	suggestBtn.setVisibility(View.VISIBLE);
}

Logout 구현
http://arabiannight.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9CAndroid-SharedPreferences-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%A0%9C

// 값(ALL Data) 삭제하기
    private void removeAllPreferences(){
        SharedPreferences pref = getSharedPreferences("pref", MODE_PRIVATE);
        SharedPreferences.Editor editor = pref.edit();
        editor.clear();
        editor.commit();
    }

DialogProgress Global 이 안된다.

BatonManageAdapter 에서 Status 구분
Intent 를 통해서 똑같이 반복되는 코드가 많다. 메서드로 통합을 시키자.

완료 status ==

*RatingBar 
xml.
numStars 만점인 별의 개수.
stepSize 속성 : 별점의 조정 단위
isIndicator : 별점을 단순히 표시만 할 것인지를 지정. (읽기 속성, 디폴트는 false)
 - ratingBarStyleIndicator, ratingBarStyleSmall
OnRatingBachangeListener Interface 의 onRatingChanged 리스너가 호출. 여기서 변경된 별점을 읽어 처리.
but, 필요할 때 getRating() 메소드로 최종 결정된 별점을 읽기만 하면 된다.

치명적인 버그 발견.
하나의 어댑터에서 check 를 할 경우. 문제가 생긴다.
즉, client_status : true 를 가지고 있는 유저가 자신의 일을 하게 되면, 문제가 생긴다.

<** 굿닥 임대표님
Social Graph , Wall 에 Posting, 친구 초대.
**>

<=== 강석흔 이사님
투자 고려중. 열심히 해보자.
===>